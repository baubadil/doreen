const path = require("path");
const fs = require("fs");
const StatsWebpackPlugin = require("stats-webpack-plugin");
const ForkTsCheckerWebpackPlugin = require('fork-ts-checker-webpack-plugin');

// Format as documented in https://webpack.js.org/configuration/entry-context/#entry :
// an object with the plugin name as key and the path as value
const makeEntries = () => {
    const entries = require('./out/webpack-export-entries.json');
    // This file is generated by the main Makefile. See remarks there.
    return entries;
};

const tsOptions = {
    module: "commonjs",
    moduleResolution: 'node',
    target: "ES3",
    baseUrl: __dirname,
    paths: {
        "core/*": [ path.join('src', 'js', '*') ],
        "*": [
            '*',
            '../' + path.basename(__dirname) + '/*',
            '../' + path.basename(__dirname) + '/node_modules/*'
        ]
    },
    isolatedModules: true
};

module.exports = {
    entry: makeEntries(),
    output: {
        path: path.resolve(__dirname, 'htdocs', 'js'),
        filename: "[name]_mod.js"
    },
    module: {
        rules: [
            {
                test: /\.ts$/,
                loader: 'ts-loader',
                options: {
                    compilerOptions: tsOptions,
                    configFile: path.resolve(__dirname, 'tsconfig.json'),
                    onlyCompileBundledFiles: true,
                    transpileOnly: true
                }
            }
        ]
    },
    resolve: {
        extensions: [ '.wasm', '.mjs', '.js', '.ts', '.json' ],
        alias: {
            core: path.resolve(__dirname, 'src', 'js'),
            vis: path.resolve(__dirname, 'node_modules', 'vis', 'dist', 'vis.js')
        },
        modules: [
            path.resolve(__dirname, 'node_modules'),
            'node_modules'
        ]
    },
    // Libraries that are ambiently available
    externals: {
        jquery: '$'
    },
    optimization: {
        splitChunks: {
            chunks: 'all',
            maxAsyncRequests: 10,
            maxInitialRequests: 5
        },
        runtimeChunk: {
            name: 'runtime'
        }
    },
    plugins: [
        new StatsWebpackPlugin('../../.stats.json', {
            errors: false,
            errorDetails: false,
            builtAt: false,
            entrypoints: false,
            performance: false,
            timings: false,
            version: false,
            warnings: false,
            warningDetails: false,
            chunkModules: false,
            modules: false,
            publicPath: false,
            outputPath: false,
            assets: false,
            chunks: false,
            hash: false,
            children: false
        }),
        new ForkTsCheckerWebpackPlugin({
            tsconfig: path.resolve(__dirname, 'tsconfig.json'),
            compilerOptions: tsOptions,
            useTypescriptIncrementalApi: true, // only allows one worker but much faster with small changes.
            reportFiles: [ 'src/**/*.ts' ]
        })
    ],
    devtool: false,
    node: false,
    performance: {
        hints: false
    }
};
